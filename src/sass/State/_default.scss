.wrapper {
  
  // from 769px to 1919px
	@include breakpoint($tablet-max-width + 1 $desktop-wide-min-width - 1) {
		min-width: $tablet;
	}
}

@include block('checkbox') {

  @include element('field') {

    &:checked + .checkbox__label {
      color: $color-blue;

      .checkbox__icon {

        &:after {
          @include opacity(1);
        }

        &:before {
          @include opacity(0);
        }
      }
    }
  }

  @include element('label') {
    @include hover(.15s);
    @include transition-property(color);
  }

  @include element('icon') {

    &:after,
    &:before {
      @include hover(.15s);
      @include transition-property(opacity);
    }
  }
}

#make-order {
	@extend %transition-background-color;

	&:hover {
		background-color: $project-view-hover;
	}
}

@include block('document') {
  margin-right: 0;

  @include modifier('moved') {
    transform: translate3d(-$nav-offset, 0, 0);

    @include breakpoint($mobile-min-width $mobile-max-width) {
      transform: translate3d(-$nav-offset-mobile, 0, 0);
    }

    &-add {
      @include transition-property(transform);
      @include transition-duration(0.3s);
      @include transition-timing-function(ease-in);
    }

    &-add-active {
      transform: translate3d(-$nav-offset, 0, 0);

      @include breakpoint($mobile-min-width $mobile-max-width) {
        transform: translate3d(-$nav-offset-mobile, 0, 0);
      }
    }

    &-remove {
      @include transition-property(transform);
      @include transition-duration(0.3s);
      @include transition-timing-function(ease-in);
    }

    &-remove-active {
      transform: translate3d(0, 0, 0);
    }
  }
}

body {

  @include block('select-field') {

    @include modifier('on-top') {
      z-index: 333;
    }

    @include element('placeholder') {

      @include modifier('active') {

        &.select-field__placeholder {
          @extend %field-active-state;
        }

        .select-field__arrow {
          margin-top: 22px;
          margin-right: 7px;
          @include rotateX(180deg);
        }
      }
    }

    @include element('arrow') {
      @include hover(.5s);
      @include transition-property(transform);
    }

    @include element('list') {
      @include hover(.5s);
      @include transition-property(max-height, padding-bottom, padding-top);
      @include transition-timing-function(linear);

      &.select-field__list--opened-remove-active {
        border-width: 1px;
      }

      @include modifier('opened') {
        max-height: 500px;
        padding-bottom: 14px;
        padding-top: 6px;
        border-width: 1px;
      }
    }

    @include element('item') {

      &:hover {
        background-color: $talk-to-us-bg;
      }
    }
  }

  @include block('dropdown-choose-list') {

    @include element('title') {

      @include modifier('active') {

        .dropdown-choose-list__sign {
          height: 2px;
        }
      }
    }

    @include element('sign') {
      @include hover(.3s);
      @include transition-property(height);
    }

    @include element('list') {
      @include hover(.5s);
      @include transition-property(max-height, padding-top);

      @include modifier('expanded') {
        padding-top: 25px;
        max-height: 500px;
      }
    }
  }

  @include block('feature') {
    @include hover(.3s);
    @include transition-property(all);

    &:hover {

      .feature__title {
        border-color: $header-line;
      }
    }

    @include modifier('active') {
      background-color: $nav-item;
      height: 350px;
      margin-top: -50px;

      .feature__title {
        color: $nav-bg;
        border-color: $nav-item;
      }

      .feature__description-list {
        @include opacity(1);
      }
    }

    @include element('image') {
      @include hover(.2s);
      @include transition-property(opacity);

      &.ng-enter {
        @include opacity(0);

        &-active {
          @include opacity(1);
        }
      }

      &.ng-leave {
        @include opacity(1);

        &-active {
          @include opacity(0);
        }
      }
    }

    @include element('title') {
      @include hover(.2s);
      @include transition-property(color, border-color);
    }
  }

  @include block('triangles') {

    @include element('item') {
      @include transition-property(transform, opacity);
      @include transition-duration(0.5s);
      @include transition-timing-function(ease-in);

      @include modifier('start') {
        @include opacity(0.5);
        @include rotateZ(0deg);
        @include scale(0.5);
      }
    }
  }

  @include block('header') {

    @include element('video') {

      @include breakpoint($mobile-min-width 1660px) {
        @include size(auto, 100%);
      }
    }

    @include element('go-next') {
      @include hover(.2s);
      @include transition-property(opacity);

      &:hover {
        @include opacity(1);
      }
    }
  }

  @include block('brain') {

    @include breakpoint($desktop-min-width $desktop-max-width + 81) {
      margin-top: 240px;
    }

    @include breakpoint($desktop-min-width $desktop-max-width - 1) {
      margin-top: 300px;
    }

    @include breakpoint($desktop-min-width $desktop-min-width + 100) {
      margin-top: 370px;
    }

    @include breakpoint($tablet-max-width + 200 $desktop-min-width - 20) {
      margin-top: 260px;
    }

    @include breakpoint($tablet-max-width + 150 $tablet-max-width + 199) {
      margin-top: 340px;
    }

    @include breakpoint($tablet-max-width + 80 $tablet-max-width + 149) {
      margin-top: 400px;
    }

    @include breakpoint($tablet-max-width $tablet-max-width + 79) {
      margin-top: 460px;
    }
  }

  @include block('send-message') {

    @include breakpoint($tablet-max-width $tablet-max-width) {

      @include element('title') {
        width: 100% !important;
      }
    }
  }
}

@include block('social-icons') {

  @include element('item') {

    &:last-child {
      width: 32%;
    }
  }
}

@include block('services') {

  @include element('feature') {

    @include modifier('active') {
      z-index: 222;
    }
  }

  @include element('panel-top') {
    
    // from 200px to 1919px
    @include breakpoint($tablet-max-width + 1 $desktop-wide-min-width - 1) {
      @include container($desktop);
    }
    
    // from 200px to 1279px
    @include breakpoint($tablet-max-width + 1 $desktop-max-width) {
      @include container($tablet);
    }
  }
}

@include block('talk-to-us') {

  @include element('submit') {
    @extend %transition-background-color;
    @include transition-timing-function(ease-in);

    &:hover {
      background-color: $color-black;
    }
  }
}

@include block('categories') {

  @include element('item') {
    @include hover(.2s);
    @include transition-property(color);

    @include modifier('active') {
      color: $color-blue;
      border-bottom: 1px solid $color-blue;
    }

    &:hover {
      color: $color-blue;
    }
  }
}

@include block('feature-image') {

  @include modifier('1') {
    @include size(140px, auto);
  }

  @include modifier('2') {
    @include size(150px, auto);
  }

  @include modifier('3') {
    @include size(90px, auto);
  }

  @include modifier('4') {
    @include size(150px, auto);
  }

  @include modifier('5') {
    @include size(150px, auto);
  }

  @include modifier('6') {
    @include size(145px, auto);
  }
}

@include block('projects') {

	@include element('view-all') {
		@extend %transition-background-color;

		&:hover {
			background-color: $project-view-hover;
		}
	}
}

@include block('project') {

	@include element('view') {
		@extend %transition-background-color;

		&:hover {
			background-color: $project-view-hover;
		}
	}
}

@include block('footer') {

	@include element('go-top') {
		@include hover(.2s);
		@include transition-property(background-color, color);

		&:hover {
			background-color: $project-view-hover;
			color: $button-blue;
		}
	}
}

@include block('phones') {

	@include element('item') {

		&:hover {
			text-decoration: underline;
		}
	}
}



@include block('nav') {
  @include transition-property(background-color, height, padding-top);
  @include transition-duration(.2s);
  @include transition-timing-function(ease-in);
  
  @include element('logo') {
    @include transition-property(margin-top);
    @include transition-duration(.2s);
    @include transition-timing-function(ease-in);
  }

  @include modifier('grey') {
    background-color: $color-dark;
    height: $nav-height-desktop - 18 !important;
    padding-top: $nav-padding-desktop - 10 !important;

    @include breakpoint($mobile-max-width + 1 $tablet-max-width) {
      height: $nav-height-tablet !important;
      padding-top: $nav-padding-tablet !important;
    }

    @include breakpoint($mobile-min-width $mobile-max-width) {
      height: $nav-height-mobile !important;
      padding-top: $nav-padding-desktop !important;
    }

    .nav__item {
      color: $body-bg;

      &.nav__item--active {
        color: $color-blue;
      }
    }

    .nav__lang-item--active {
      background-color: $color-blue;
    }

    .nav__logo {

      @include breakpoint($tablet-max-width + 1) {
        margin-top: -12px;
      }
    }
  }

	@include element('item') {

		@include hover(.2s);
		@include transition-property(color, background-color, border-color);
    @include transition-timing-function(ease-in);

		@include modifier('active') {
			color: $color-blue;
		}

		&:hover {
			color: $color-blue;
		}

	}

	@include element('control') {
		@include hover(.2s);
		@include transition-property(opacity);

		&:hover {
			@include opacity(.8);
		}
	}

	@include element('close') {
		@include hover(.2s);
		@include transition-property(opacity, background-color);

		&:hover {
			@include opacity(1);
			background-color: $color-black;
		}
	}

	@include element('lang-item') {

		@include modifier('active') {
			color: $nav-bg;
			background-color: $nav-item;
		}

		&:hover {
			color: $nav-bg;
			background-color: $color-blue;
		}
	}
}

@include block('go-back') {
  @extend %transition-background-color;

  &:hover {
    background-color: $color-black;
  }
}

@include block('front-layer') {

  &.ng-hide-add {
    @include opacity(1);

    @include hover(.5s);
    @include transition-property(opacity);
    @include transition-delay(500ms);
  }

  &.ng-hide-add-active {
    @include opacity(0);
  }
}

@include block('info') {

  @include element('error') {
    border-color: red !important;
  }

  @include element('field') {
    @include hover(.3s);
    @include transition-property(border-color);

    &:focus {
      @extend %field-active-state;
    }
  }

  @include element('textarea') {

    &:focus {
      padding-top: 11px;
      line-height: 1.3;
    }
  }
}